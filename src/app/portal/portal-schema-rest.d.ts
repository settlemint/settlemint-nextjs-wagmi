/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/eas-deployment/{address}/eip-712-domain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressEip-712-domain"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-attest-type-hash": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-attest-type-hash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-attestation/{uid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-attestationByUid"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-domain-separator": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-domain-separator"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-name": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-name"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-nonce/{account}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-nonceByAccount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-revoke-offchain/{revoker}/{data}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-revoke-offchainByRevokerByData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-revoke-type-hash": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-revoke-type-hash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-schema-registry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-schema-registry"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/get-timestamp/{data}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressGet-timestampByData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/is-attestation-valid/{uid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressIs-attestation-validByUid"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressVersion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/attest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressAttest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/attest/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressAttestReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/attest-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressAttest-by-delegation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/attest-by-delegation/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressAttest-by-delegationReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/increase-nonce": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressIncrease-nonce"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/increase-nonce/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressIncrease-nonceReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-attest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressMulti-attest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-attest/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressMulti-attestReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-attest-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressMulti-attest-by-delegation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-attest-by-delegation/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressMulti-attest-by-delegationReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-revoke": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressMulti-revoke"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-revoke/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressMulti-revokeReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-revoke-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressMulti-revoke-by-delegation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-revoke-by-delegation/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressMulti-revoke-by-delegationReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-revoke-offchain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressMulti-revoke-offchain"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-revoke-offchain/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressMulti-revoke-offchainReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-timestamp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressMulti-timestamp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/multi-timestamp/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressMulti-timestampReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/revoke": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressRevoke"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/revoke/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressRevokeReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/revoke-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressRevoke-by-delegation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/revoke-by-delegation/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressRevoke-by-delegationReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/revoke-offchain": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressRevoke-offchain"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/revoke-offchain/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressRevoke-offchainReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/timestamp": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-deploymentByAddressTimestamp"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-deployment/{address}/timestamp/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-deploymentByAddressTimestampReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-schema-registry/{address}/get-schema/{uid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-schema-registryByAddressGet-schemaByUid"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-schema-registry/{address}/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-schema-registryByAddressVersion"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-schema-registry/{address}/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["postApiEas-schema-registryByAddressRegister"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/eas-schema-registry/{address}/register/receipt/{transactionHash}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getApiEas-schema-registryByAddressRegisterReceiptByTransactionHash"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/pending-and-recently-processed": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the list of pending and recently processed transactions */
        get: operations["getTransactionsPending-and-recently-processed"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/pending": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the list of pending transactions */
        get: operations["getTransactionsPending"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/transactions/processed": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the list of processed transactions */
        get: operations["getTransactionsProcessed"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "getApiEas-deploymentByAddressEip-712-domain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        fields: string;
                        name: string;
                        version: string;
                        chainId: string;
                        verifyingContract: string;
                        salt: string;
                        extensions: string[];
                    };
                    "multipart/form-data": {
                        fields: string;
                        name: string;
                        version: string;
                        chainId: string;
                        verifyingContract: string;
                        salt: string;
                        extensions: string[];
                    };
                    "text/plain": {
                        fields: string;
                        name: string;
                        version: string;
                        chainId: string;
                        verifyingContract: string;
                        salt: string;
                        extensions: string[];
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-attest-type-hash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-attestationByUid": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                uid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        uid: string;
                        schema: string;
                        time: string;
                        expirationTime: string;
                        revocationTime: string;
                        refUID: string;
                        recipient: string;
                        attester: string;
                        revocable: boolean;
                        data: string;
                    };
                    "multipart/form-data": {
                        uid: string;
                        schema: string;
                        time: string;
                        expirationTime: string;
                        revocationTime: string;
                        refUID: string;
                        recipient: string;
                        attester: string;
                        revocable: boolean;
                        data: string;
                    };
                    "text/plain": {
                        uid: string;
                        schema: string;
                        time: string;
                        expirationTime: string;
                        revocationTime: string;
                        refUID: string;
                        recipient: string;
                        attester: string;
                        revocable: boolean;
                        data: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-domain-separator": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-name": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-nonceByAccount": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                account: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-revoke-offchainByRevokerByData": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                revoker: string;
                data: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-revoke-type-hash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-schema-registry": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressGet-timestampByData": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                data: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressIs-attestation-validByUid": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                uid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": boolean;
                    "multipart/form-data": boolean;
                    "text/plain": boolean;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressVersion": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressAttest": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        request: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            };
                        };
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        request: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            };
                        };
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        request: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            };
                        };
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressAttestReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressAttest-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        delegatedRequest: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            };
                            signature: {
                                v: number;
                                r: string;
                                s: string;
                            };
                            attester: string;
                            deadline: string;
                        };
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        delegatedRequest: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            };
                            signature: {
                                v: number;
                                r: string;
                                s: string;
                            };
                            attester: string;
                            deadline: string;
                        };
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        delegatedRequest: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            };
                            signature: {
                                v: number;
                                r: string;
                                s: string;
                            };
                            attester: string;
                            deadline: string;
                        };
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressAttest-by-delegationReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressIncrease-nonce": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        newNonce: string;
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        newNonce: string;
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        newNonce: string;
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressIncrease-nonceReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressMulti-attest": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiRequests: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            }[];
                        }[];
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiRequests: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            }[];
                        }[];
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiRequests: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            }[];
                        }[];
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressMulti-attestReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressMulti-attest-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiDelegatedRequests: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            }[];
                            signatures: {
                                v: number;
                                r: string;
                                s: string;
                            }[];
                            attester: string;
                            deadline: string;
                        }[];
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiDelegatedRequests: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            }[];
                            signatures: {
                                v: number;
                                r: string;
                                s: string;
                            }[];
                            attester: string;
                            deadline: string;
                        }[];
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiDelegatedRequests: {
                            schema: string;
                            data: {
                                recipient: string;
                                expirationTime: string;
                                revocable: boolean;
                                refUID: string;
                                data: string;
                                value: string;
                            }[];
                            signatures: {
                                v: number;
                                r: string;
                                s: string;
                            }[];
                            attester: string;
                            deadline: string;
                        }[];
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressMulti-attest-by-delegationReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressMulti-revoke": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiRequests: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            }[];
                        }[];
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiRequests: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            }[];
                        }[];
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiRequests: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            }[];
                        }[];
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressMulti-revokeReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressMulti-revoke-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiDelegatedRequests: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            }[];
                            signatures: {
                                v: number;
                                r: string;
                                s: string;
                            }[];
                            revoker: string;
                            deadline: string;
                        }[];
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiDelegatedRequests: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            }[];
                            signatures: {
                                v: number;
                                r: string;
                                s: string;
                            }[];
                            revoker: string;
                            deadline: string;
                        }[];
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        multiDelegatedRequests: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            }[];
                            signatures: {
                                v: number;
                                r: string;
                                s: string;
                            }[];
                            revoker: string;
                            deadline: string;
                        }[];
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressMulti-revoke-by-delegationReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressMulti-revoke-offchain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string[];
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string[];
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string[];
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressMulti-revoke-offchainReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressMulti-timestamp": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string[];
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string[];
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string[];
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressMulti-timestampReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressRevoke": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        request: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            };
                        };
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        request: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            };
                        };
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        request: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            };
                        };
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressRevokeReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressRevoke-by-delegation": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        delegatedRequest: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            };
                            signature: {
                                v: number;
                                r: string;
                                s: string;
                            };
                            revoker: string;
                            deadline: string;
                        };
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        delegatedRequest: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            };
                            signature: {
                                v: number;
                                r: string;
                                s: string;
                            };
                            revoker: string;
                            deadline: string;
                        };
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    /** @description Payable value (wei) */
                    value?: string;
                    input: {
                        delegatedRequest: {
                            schema: string;
                            data: {
                                uid: string;
                                value: string;
                            };
                            signature: {
                                v: number;
                                r: string;
                                s: string;
                            };
                            revoker: string;
                            deadline: string;
                        };
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressRevoke-by-delegationReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressRevoke-offchain": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string;
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string;
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string;
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressRevoke-offchainReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-deploymentByAddressTimestamp": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string;
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string;
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        data: string;
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-deploymentByAddressTimestampReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-schema-registryByAddressGet-schemaByUid": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                uid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        uid: string;
                        resolver: string;
                        revocable: boolean;
                        schema: string;
                    };
                    "multipart/form-data": {
                        uid: string;
                        resolver: string;
                        revocable: boolean;
                        schema: string;
                    };
                    "text/plain": {
                        uid: string;
                        resolver: string;
                        revocable: boolean;
                        schema: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-schema-registryByAddressVersion": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                    "multipart/form-data": string;
                    "text/plain": string;
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "postApiEas-schema-registryByAddressRegister": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        schema: string;
                        resolver: string;
                        revocable: boolean;
                    };
                };
                "multipart/form-data": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        schema: string;
                        resolver: string;
                        revocable: boolean;
                    };
                };
                "text/plain": {
                    /** @description From address */
                    from: string;
                    /** @description Gas limit */
                    gasLimit?: string;
                    /** @description Gas price */
                    gasPrice?: string;
                    /** @description Simulate the transaction before sending it */
                    simulate?: boolean;
                    /** @description Metadata (store custom metadata from your application) */
                    metadata?: Record<string, never>;
                    input: {
                        schema: string;
                        resolver: string;
                        revocable: boolean;
                    };
                };
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "multipart/form-data": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                    "text/plain": {
                        /** @description Transaction hash */
                        transactionHash: string;
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getApiEas-schema-registryByAddressRegisterReceiptByTransactionHash": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Contract address */
                address: string;
                /** @description Transaction hash */
                transactionHash: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "multipart/form-data": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                    "text/plain": {
                        receipt: {
                            /** @description Blob Gas Price */
                            blobGasPrice?: string;
                            /** @description Blob Gas Used */
                            blobGasUsed?: string;
                            /** @description Block Hash */
                            blockHash: string;
                            /** @description Block Number */
                            blockNumber: string;
                            /** @description Contract Address */
                            contractAddress?: string | null;
                            /** @description Cumulative Gas Used */
                            cumulativeGasUsed: string;
                            /** @description Effective Gas Price */
                            effectiveGasPrice: string;
                            /** @description From */
                            from: string;
                            /** @description Gas Used */
                            gasUsed: string;
                            /** @description Logs */
                            logs: unknown[];
                            /** @description Logs Bloom */
                            logsBloom: string;
                            /** @description Root */
                            root?: string;
                            /** @description Status */
                            status: "success" | "reverted";
                            /** @description To */
                            to: string | null;
                            /** @description Transaction Hash */
                            transactionHash: string;
                            /** @description Transaction Index */
                            transactionIndex: number;
                            /** @description Type */
                            type: string;
                        };
                    };
                };
            };
            /** @description InvalidInputRpcErrorType, InvalidParamsRpcErrorType, InvalidRequestRpcErrorType, ParseRpcErrorType */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32000;
                        /** @constant */
                        name: "InvalidInputRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32602;
                        /** @constant */
                        name: "InvalidParamsRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32600;
                        /** @constant */
                        name: "InvalidRequestRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32700;
                        /** @constant */
                        name: "ParseRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotFoundRpcErrorType, ResourceNotFoundRpcErrorType */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32601;
                        /** @constant */
                        name: "MethodNotFoundRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32001;
                        /** @constant */
                        name: "ResourceNotFoundRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description TransactionRejectedRpcErrorType */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32003;
                        /** @constant */
                        name: "TransactionRejectedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            425: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                    "multipart/form-data": {
                        message: string;
                    };
                    "text/plain": {
                        message: string;
                    };
                };
            };
            /** @description LimitExceededRpcErrorType */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32005;
                        /** @constant */
                        name: "LimitExceededRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ChainDisconnectedErrorType, HttpRequestErrorType, InternalRpcErrorType, ProviderDisconnectedErrorType, RpcErrorType, RpcRequestErrorType, SwitchChainErrorType, TimeoutErrorType, UnauthorizedProviderErrorType, UnknownRpcErrorType, UnsupportedProviderMethodErrorType, UserRejectedRequestErrorType, WebSocketRequestErrorType */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: 4901;
                        /** @constant */
                        name: "ChainDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "HttpRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: -32603;
                        /** @constant */
                        name: "InternalRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4900;
                        /** @constant */
                        name: "ProviderDisconnectedError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "RpcRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4902;
                        /** @constant */
                        name: "SwitchChainError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "TimeoutError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4100;
                        /** @constant */
                        name: "UnauthorizedProviderError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "UnknownRpcError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4200;
                        /** @constant */
                        name: "UnsupportedProviderMethodError";
                        message: string;
                    } | {
                        /** @constant */
                        code: 4001;
                        /** @constant */
                        name: "UserRejectedRequestError";
                        message: string;
                    } | {
                        /** @constant */
                        name: "WebSocketRequestError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description MethodNotSupportedRpcErrorType */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32004;
                        /** @constant */
                        name: "MethodNotSupportedRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description ResourceUnavailableRpcErrorType */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32002;
                        /** @constant */
                        name: "ResourceUnavailableRpcError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
            /** @description JsonRpcVersionUnsupportedErrorType */
            505: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "multipart/form-data": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                    "text/plain": {
                        /** @constant */
                        code: -32006;
                        /** @constant */
                        name: "JsonRpcVersionUnsupportedError";
                        message: string;
                    } | {
                        message: string;
                    };
                };
            };
        };
    };
    "getTransactionsPending-and-recently-processed": {
        parameters: {
            query?: {
                /** @description Contract address */
                address?: string;
                /** @description From address */
                from?: string;
                /** @description Function name */
                functionName?: string;
                /** @description Page number, starts from 0 */
                page?: string;
                /** @description Number of items per page */
                pageSize?: string;
                /** @description Processed after date, use json like date format (eg 2024-06-26T14:07:37.740Z) (default is 15 minutes ago) */
                processedAfter?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Pending and recently processed transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                    "multipart/form-data": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Pending and recently processed transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                    "text/plain": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Pending and recently processed transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                };
            };
        };
    };
    getTransactionsPending: {
        parameters: {
            query?: {
                /** @description Contract address */
                address?: string;
                /** @description From address */
                from?: string;
                /** @description Function name */
                functionName?: string;
                /** @description Page number, starts from 0 */
                page?: string;
                /** @description Number of items per page */
                pageSize?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Pending transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                    "multipart/form-data": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Pending transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                    "text/plain": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Pending transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                };
            };
        };
    };
    getTransactionsProcessed: {
        parameters: {
            query?: {
                /** @description Contract address */
                address?: string;
                /** @description From address */
                from?: string;
                /** @description Function name */
                functionName?: string;
                /** @description Page number, starts from 0 */
                page?: string;
                /** @description Number of items per page */
                pageSize?: string;
                /** @description Processed after date, use json like date format (eg 2024-06-26T14:07:37.740Z) */
                processedAfter?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Processed transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                    "multipart/form-data": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Processed transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                    "text/plain": {
                        /** @description Total number of results */
                        count: number;
                        /** @description Processed transactions */
                        records: {
                            /** @description Transaction hash */
                            transactionHash: string;
                            /** @description From address */
                            from: string;
                            /** @description Contract address */
                            address: string;
                            /** @description Function name */
                            functionName: string;
                            createdAt: (Record<string, never> | string) | null;
                            updatedAt: (Record<string, never> | string) | null;
                            receipt: {
                                /** @description Blob Gas Price */
                                blobGasPrice?: string;
                                /** @description Blob Gas Used */
                                blobGasUsed?: string;
                                /** @description Block Hash */
                                blockHash: string;
                                /** @description Block Number */
                                blockNumber: string;
                                /** @description Contract Address */
                                contractAddress?: string | null;
                                /** @description Cumulative Gas Used */
                                cumulativeGasUsed: string;
                                /** @description Effective Gas Price */
                                effectiveGasPrice: string;
                                /** @description From */
                                from: string;
                                /** @description Gas Used */
                                gasUsed: string;
                                /** @description Logs */
                                logs: unknown[];
                                /** @description Logs Bloom */
                                logsBloom: string;
                                /** @description Root */
                                root?: string;
                                /** @description Status */
                                status: "success" | "reverted";
                                /** @description To */
                                to: string | null;
                                /** @description Transaction Hash */
                                transactionHash: string;
                                /** @description Transaction Index */
                                transactionIndex: number;
                                /** @description Type */
                                type: string;
                            } | null;
                            metadata: Record<string, never> | null;
                        }[];
                    };
                };
            };
        };
    };
}
